name: Deploy

on:
  push:
    branches: [main]
    tags:
      - '*'

env:
  BACKEND_NAME: hotel-backend
  FRONTEND_NAME: hotel-frontend
  BACKEND_URL: 'https://${{ secrets.HEROKU_APP_NAME }}.herokuapp.com'

jobs:
  Backend:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v1
        with:
          java-version: 17
      - name: Get git tag
        uses: olegtarasov/get-tag@v2.1
      - name: Check tag
        shell: bash
        if: ${{ env.GIT_TAG_NAME == '' }}
        run: echo "GIT_TAG_NAME=latest" >> $GITHUB_ENV
      - name: Build backend
        run: |
          chmod +x ./scripts/build_backend.sh
          ./scripts/build_backend.sh $BACKEND_NAME-$GIT_TAG_NAME
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.BACKEND_NAME }}-${{ env.GIT_TAG_NAME }}.jar
          path: build/${{ env.BACKEND_NAME }}-${{ env.GIT_TAG_NAME }}.jar
      - name: Deploy backend
        uses: akhileshns/heroku-deploy@v3.12.12
        with:
          heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
          heroku_app_name: ${{ secrets.HEROKU_APP_NAME }}
          heroku_email: ${{ secrets.HEROKU_EMAIL }}
          appdir: 'backend'
          stack: 'heroku-22'
          region: 'eu'
          procfile: 'web: java -Dserver.port=$PORT $JAVA_OPTS -jar build/libs/backend.jar'
          healthcheck: '${{ env.BACKEND_URL }}'
          rollbackonhealthcheckfailed: true

  Frontend:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set project env vars
        uses: dkershner6/vercel-set-env-action@v1
        with:
          token: ${{ secrets.VERCEL_TOKEN }}
          projectName: ${{ env.FRONTEND_NAME }}
          envVariableKeys: NEXT_PUBLIC_BACKEND_URL
        env:
          NEXT_PUBLIC_BACKEND_URL: ${{ env.BACKEND_URL }}
          TARGET_NEXT_PUBLIC_BACKEND_URL: production,preview,development
          TYPE_NEXT_PUBLIC_BACKEND_URL: plain
      - name: Deploy frontend
        uses: amondnet/vercel-action@v20
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          vercel-args: '--prod --confirm'
          vercel-org-id: ${{ secrets.VERCEL_ORGANIZATION_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: ./frontend

  Release:
    runs-on: ubuntu-latest
    needs: [Backend, Frontend]

    steps:
      - name: Get git tag
        uses: olegtarasov/get-tag@v2.1
      - name: Check tag
        shell: bash
        if: ${{ env.GIT_TAG_NAME == '' }}
        run: echo "GIT_TAG_NAME=latest" >> $GITHUB_ENV
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: ${{ env.BACKEND_NAME }}-${{ env.GIT_TAG_NAME }}.jar
      - name: Create release
        uses: 'marvinpinto/action-automatic-releases@latest'
        with:
          repo_token: '${{ secrets.GITHUB_TOKEN }}'
          automatic_release_tag: '${{ env.GIT_TAG_NAME }}'
          prerelease: false
          files: '*'
