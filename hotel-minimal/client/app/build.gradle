plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
}

def keystoreProperties = new Properties()
def keystoreFile = file('keystore/keystore.properties')
def hasKeystore = keystoreFile.exists() || System.getenv('KEYSTORE_PASSWORD')
def backendUrl = System.getenv("BACKEND_URL") ?: "http://localhost:5000"

android {
    compileSdk 33

    defaultConfig {
        applicationId "hotel.minimal.client"
        minSdk 23
        targetSdk 33
        versionCode 4
        versionName "1.2"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    if (hasKeystore) {
        signingConfigs {
            release {
                if (keystoreFile.exists()) {
                    file('keystore/keystore.properties').withInputStream {
                        keystoreProperties.load(it)
                    }

                    storeFile file("$keystoreProperties.storeFile")
                    storePassword "$keystoreProperties.storePassword"
                    keyAlias "$keystoreProperties.keyAlias"
                    keyPassword "$keystoreProperties.keyPassword"
                } else {
                    storeFile file('keystore/android_keystore.keystore')
                    storePassword System.getenv('KEYSTORE_PASSWORD')
                    keyAlias System.getenv('RELEASE_SIGN_KEY_ALIAS')
                    keyPassword System.getenv('RELEASE_SIGN_KEY_PASSWORD')
                }
            }
        }
    }

    buildFeatures {
        viewBinding true
    }

    buildTypes {
        debug {
            buildConfigField("String", "BACKEND_URL", "\"$backendUrl\"")
        }

        release {
            if (hasKeystore) {
                signingConfig signingConfigs.release
            }

            buildConfigField("String", "BACKEND_URL", "\"$backendUrl\"")
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {
    implementation 'com.github.IIPEKOLICT:LOS:2.1.3-en'

    implementation 'androidx.core:core-ktx:1.9.0'
    implementation 'androidx.appcompat:appcompat:1.5.1'
    implementation 'com.google.android.material:material:1.6.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.fragment:fragment-ktx:1.5.2'
    implementation 'androidx.viewpager2:viewpager2:1.0.0'

    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.okhttp3:okhttp:4.10.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.4'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.4'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.5.1'
    implementation 'com.android.databinding:viewbinding:7.3.0'

    implementation 'com.google.dagger:dagger-android:2.43.2'
    kapt 'com.google.dagger:dagger-android-processor:2.43.2'
    kapt 'com.google.dagger:dagger-compiler:2.43.2'

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}