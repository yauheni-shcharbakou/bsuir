name: Release

on:
  push:
    branches: [main]
    tags: ['*']

env:
  CLIENT_NAME: hotel-minimal-client
  BACKEND_NAME: hotel-minimal-backend
  BACKEND_URL: 'https://${{ secrets.HEROKU_APP_NAME }}.herokuapp.com'

jobs:
  Backend:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v1
        with:
          java-version: 18
      - name: Get git tag
        uses: olegtarasov/get-tag@v2.1
      - name: Check tag
        if: ${{ env.GIT_TAG_NAME == '' }}
        run: echo "GIT_TAG_NAME=latest" >> $GITHUB_ENV
      - name: Build backend
        run: |
          chmod +x ./scripts/build_backend.sh
          ./scripts/build_backend.sh $BACKEND_NAME-$GIT_TAG_NAME
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: Backend
          path: build/*
          retention-days: 1
      - name: Deploy backend
        uses: akhileshns/heroku-deploy@v3.12.12
        with:
          heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
          heroku_app_name: ${{ secrets.HEROKU_APP_NAME }}
          heroku_email: ${{ secrets.HEROKU_EMAIL }}
          appdir: 'backend'
          stack: 'heroku-22'
          region: 'eu'
          procfile: 'web: ./build/install/backend/bin/backend'
          healthcheck: '${{ env.BACKEND_URL }}/test'
          rollbackonhealthcheckfailed: true

  Client:
    runs-on: ubuntu-latest

    env:
      KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
      RELEASE_SIGN_KEY_ALIAS: ${{ secrets.RELEASE_SIGN_KEY_ALIAS }}
      RELEASE_SIGN_KEY_PASSWORD: ${{ secrets.RELEASE_SIGN_KEY_PASSWORD }}

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v1
        with:
          java-version: 18
      - name: Checkout keystore repo
        uses: actions/checkout@v3
        with:
          repository: ${{ secrets.KEYSTORE_GIT_REPOSITORY }}
          token: ${{ secrets.KEYSTORE_ACCESS_TOKEN }}
          path: client/app/keystore
      - name: Get git tag
        uses: olegtarasov/get-tag@v2.1
      - name: Check tag
        if: ${{ env.GIT_TAG_NAME == '' }}
        run: echo "GIT_TAG_NAME=latest" >> $GITHUB_ENV
      - name: Build client
        run: |
          chmod +x ./scripts/build_client.sh
          ./scripts/build_client.sh $CLIENT_NAME-$GIT_TAG_NAME
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: Client
          path: build/*
          retention-days: 1

  Release:
    runs-on: ubuntu-latest
    needs: [Backend, Client]

    steps:
      - name: Get git tag
        uses: olegtarasov/get-tag@v2.1
      - name: Check tag
        if: ${{ env.GIT_TAG_NAME == '' }}
        run: echo "GIT_TAG_NAME=latest" >> $GITHUB_ENV
      - name: Download all artifacts
        uses: actions/download-artifact@v3
      - name: Create release
        uses: 'marvinpinto/action-automatic-releases@latest'
        with:
          repo_token: '${{ secrets.GITHUB_TOKEN }}'
          automatic_release_tag: '${{ env.GIT_TAG_NAME }}'
          prerelease: false
          files: '**/*'
