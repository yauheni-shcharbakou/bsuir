name: Release

on:
  push:
    branches: [main]
    tags: ['*']

permissions:
  contents: write

env:
  APP_NAME: weather

jobs:
  Web:
    runs-on: ubuntu-latest

    env:
      REPOSITORY_NAME: ${{ github.event.repository.name }}

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: Install npm dependencies
        run: npm i
      - name: Build for Web
        run: npm run build:web
      - name: Deploy Web version
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: www
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: Web
          path: www/
          retention-days: 1

  Android:
    runs-on: ubuntu-latest
    needs: [Web]

    env:
      KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
      RELEASE_SIGN_KEY_ALIAS: ${{ secrets.RELEASE_SIGN_KEY_ALIAS }}
      RELEASE_SIGN_KEY_PASSWORD: ${{ secrets.RELEASE_SIGN_KEY_PASSWORD }}

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Download Web artifacts
        uses: actions/download-artifact@v3
        with:
          name: Web
          path: www/
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: Checkout keystore repo
        uses: actions/checkout@v3
        with:
          repository: ${{ secrets.KEYSTORE_GIT_REPOSITORY }}
          token: ${{ secrets.KEYSTORE_ACCESS_TOKEN }}
          path: android/app/keystore
      - name: Get git tag
        uses: olegtarasov/get-tag@v2.1
      - name: Check tag
        if: ${{ env.GIT_TAG_NAME == '' }}
        run: echo "GIT_TAG_NAME=latest" >> $GITHUB_ENV
      - name: Install npm dependencies
        run: npm i
      - name: Build APK and AAB files
        run: |
          chmod +x ./scripts/build_android.sh
          ./scripts/build_android.sh $APP_NAME-$GIT_TAG_NAME
      - name: Upload Android artifacts
        uses: actions/upload-artifact@v3
        with:
          name: Android
          path: build/

  Ios:
    runs-on: macos-latest
    needs: [Web]

    steps:
      - name: Placeholder
        run: echo "Build for IOS..."
      # - uses: actions/checkout@v3
      # - uses: actions/setup-node@v3
      #   with:
      #     node-version: 16
      # - name: Install npm dependencies
      #   run: npm i
      # - name: Use XCode
      #   run: xcode-select -p
      # - name: Install pod dependencies
      #   run: pod install
      #   working-directory: ios
      # - name: Build for IOS
      #   run: "xcodebuild \
      #     -workspace ios/HelloReactNative.xcworkspace \
      #     -scheme HelloReactNative \
      #     clean archive \
      #     -sdk iphoneos \
      #     -configuration Debug \
      #     -UseModernBuildSystem=NO \
      #     -archivePath $PWD/HelloReactNative \
      #     CODE_SIGNING_ALLOWED=NO"
      # - name: Check ios file tree
      #   run: cd ios && ls

  Release:
    runs-on: ubuntu-latest
    needs: [Android, Ios]

    steps:
      - name: Download Android artifacts
        uses: actions/download-artifact@v3
        with:
          name: Android
      - name: Get git tag
        uses: olegtarasov/get-tag@v2.1
      - name: Check tag
        if: ${{ env.GIT_TAG_NAME == '' }}
        run: echo "GIT_TAG_NAME=latest" >> $GITHUB_ENV
      - name: Create release
        uses: 'marvinpinto/action-automatic-releases@latest'
        with:
          repo_token: '${{ secrets.GITHUB_TOKEN }}'
          automatic_release_tag: '${{ env.GIT_TAG_NAME }}'
          prerelease: false
          files: '**/*'
